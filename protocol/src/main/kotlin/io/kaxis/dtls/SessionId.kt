/*
 * Copyright (c) 2024. Galudisu@gmail.com
 *
 * All rights reserved.
 */

package io.kaxis.dtls

import io.kaxis.Bytes
import io.kaxis.dtls.cipher.RandomManager

/**
 * A session identifier is a value generated by a server that identifies a particular session.
 */
class SessionId : Bytes {
  companion object {
    private val EMPTY_SESSION_ID = SessionId(EMPTY_BYTES)

    /**
     * Creates a new instance with an empty byte array as the ID.
     * @return a new (empty) session ID object
     */
    fun emptySessionId(): SessionId = EMPTY_SESSION_ID
  }

  constructor() : this(createBytes(RandomManager.currentSecureRandom(), 32))

  /**
   * Creates a session identifier based on given bytes.
   * @param sessionId the bytes constituting the identifier
   * @throws NullPointerException if the byte array is `null`
   * @throws IllegalArgumentException if the byte array is larger than 255 bytes
   */
  constructor(sessionId: ByteArray?) : super(sessionId)

  /**
   * Creates a string representation of this session ID.
   * @return the hexadecimal string representation of the ID
   */
  override fun toString(): String {
    return asString
  }
}
